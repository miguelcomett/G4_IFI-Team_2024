#
/control/verbose 2
/control/saveHistory
/run/verbose 2
# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 1400x1000-0+0
# viewing in DAWN:
#/vis/open DAWNFILE
#
# Use this open statement to create an OpenInventor view:
#/vis/open OI
#
# Use this open statement to create a .prim file suitable for
#
#
# Use this open statement to create a .heprep file suitable for
# viewing in HepRApp:
#/vis/open HepRepFile
#
# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
#/vis/viewer/set/viewpointVector 1 1 1
#/vis/viewer/set/viewpointThetaPhi 0 180
/vis/viewer/set/upVector 0 0 1
/vis/viewer/set/viewpointVector 1 0 0
/vis/viewer/set/lightsVector 1 0 0
#
# zoom factor
/vis/viewer/zoom 1.5
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
#/vis/viewer/set/auxiliaryEdge true
#/vis/viewer/set/lineSegmentsPerCircle 100
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
#/vis/scene/add/hits
#
# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add gamma
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
#/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts true
# To select or override default colours (note: e+ is blue by default):
#/vis/modeling/trajectories/list
#/vis/modeling/trajectories/drawByParticleID-0/set e+ yellow
#
# To superimpose all of the events from a given run:

#
# Decorations
# Name
/vis/viewer/set/background White
/vis/set/textColour green
/vis/set/textLayout right

# or, if your system does not support right-adjustment

/vis/set/textLayout center    # Revert to normal (left adjusted) layout
/vis/set/textColour black   # Revert to default text colour (blue)
#
# Axes, scale, etc.
#/vis/scene/add/scale 1 cm  # Simple scale line
/vis/scene/add/axes 0 0 0 20 cm  # Simple axes: x=red, y=green, z=blue.

#
# Frame
#
# To get nice view
# Make the "World" box invisible
/vis/geometry/set/visibility World 0 false
# "Envelope" is transparent blue to represent water
#/vis/geometry/set/colour Envelope 0 0 0 1 .3
#/vis/viewer/set/style surface
/vis/viewer/set/hiddenMarker true

#/vis/viewer/set/globalLineWidthScale 2
#/vis/modeling/trajectories/drawByCharge-0/default/setLineWidth 0
#
/vis/multithreading/maxEventQueueSize 100000
#/geometry/test/resolution 10000
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
#/vis/disable
/vis/verbose warnings
#
#/vis/scene/endOfEventAction refresh
/vis/scene/endOfEventAction accumulate -1
#/control/execute gpse.g4mac
#/control/execute scoring.mac
# For file-based drivers, use this to create an empty detector view:
/vis/viewer/flush



